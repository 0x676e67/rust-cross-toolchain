name: CI

permissions:
  contents: read
  packages: write

on:
  pull_request:
  push:
    branches:
      - main
      - dev
    tags:
      - '[0-9]+-[0-9]+-[0-9]+'
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: linux-gnu
          - target: linux-gnu
            host: aarch64
          - target: linux-musl
            musl: '1.1'
          - target: linux-musl
            musl: '1.2'
          - target: linux-uclibc
          - target: android
          - target: freebsd
          - target: netbsd
          - target: openbsd
          - target: dragonfly
          - target: solaris
          - target: illumos
          - target: redox
          # - target: fuchsia
          - target: wasi
          - target: emscripten
          - target: windows-gnu
          - target: windows-gnu
            host: aarch64
          - target: none
          - target: none
            host: aarch64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          driver-opts: |
            env.BUILDKIT_STEP_LOG_MAX_SIZE=10485760
            network=host
      - run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          echo "PUSH_TO_GHCR=1" >> "${GITHUB_ENV}"
        if: github.repository_owner == 'taiki-e' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      - run: tools/build-docker.sh "${{ matrix.target }}"
        env:
          HOST_ARCH: ${{ matrix.host }}
          MUSL_VERSION: ${{ matrix.musl }}

  manifest:
    if: github.repository_owner == 'taiki-e' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          echo "PUSH_TO_GHCR=1" >> "${GITHUB_ENV}"
        if: github.repository_owner == 'taiki-e' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      - run: tools/docker-manifest.sh

  tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: taiki-e/install-action@shellcheck
      - uses: taiki-e/install-action@shfmt
      # `cargo fmt` cannot recognize files not included in the current workspace.
      - run: rustfmt --check $(git ls-files '*.rs')
        if: always()
      - run: tools/tidy.sh
        if: always()
