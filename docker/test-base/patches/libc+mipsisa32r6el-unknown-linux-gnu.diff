diff --git a/build.rs b/build.rs
index 79bec0ea4..3062e8d66 100644
--- a/build.rs
+++ b/build.rs
@@ -34,7 +34,7 @@
 const CHECK_CFG_EXTRA: &'static [(&'static str, &'static [&'static str])] = &[
     ("target_os", &["switch", "aix", "ohos"]),
     ("target_env", &["illumos", "wasi", "aix", "ohos"]),
-    ("target_arch", &["loongarch64"]),
+    ("target_arch", &["loongarch64", "mips32r6", "mips64r6"]),
 ];
 
 fn main() {
diff --git a/src/unix/linux_like/linux/align.rs b/src/unix/linux_like/linux/align.rs
index 97f811dac..fc12a0b73 100644
--- a/src/unix/linux_like/linux/align.rs
+++ b/src/unix/linux_like/linux/align.rs
@@ -5,6 +5,7 @@ macro_rules! expand_align {
                            target_arch = "x86_64",
                            target_arch = "powerpc64",
                            target_arch = "mips64",
+                           target_arch = "mips64r6",
                            target_arch = "s390x",
                            target_arch = "sparc64",
                            target_arch = "aarch64",
@@ -16,6 +17,7 @@ macro_rules! expand_align {
                                target_arch = "x86_64",
                                target_arch = "powerpc64",
                                target_arch = "mips64",
+                               target_arch = "mips64r6",
                                target_arch = "s390x",
                                target_arch = "sparc64",
                                target_arch = "aarch64",
@@ -83,6 +85,7 @@ pub struct pthread_cond_t {
 
             #[cfg_attr(all(target_pointer_width = "32",
                            any(target_arch = "mips",
+                               target_arch = "mips32r6",
                                target_arch = "arm",
                                target_arch = "hexagon",
                                target_arch = "m68k",
@@ -93,6 +96,7 @@ pub struct pthread_cond_t {
                        repr(align(4)))]
             #[cfg_attr(any(target_pointer_width = "64",
                            not(any(target_arch = "mips",
+                                   target_arch = "mips32r6",
                                    target_arch = "arm",
                                    target_arch = "hexagon",
                                    target_arch = "m68k",
@@ -108,6 +112,7 @@ pub struct pthread_mutex_t {
 
             #[cfg_attr(all(target_pointer_width = "32",
                            any(target_arch = "mips",
+                               target_arch = "mips32r6",
                                target_arch = "arm",
                                target_arch = "hexagon",
                                target_arch = "m68k",
@@ -118,6 +123,7 @@ pub struct pthread_mutex_t {
                        repr(align(4)))]
             #[cfg_attr(any(target_pointer_width = "64",
                            not(any(target_arch = "mips",
+                                   target_arch = "mips32r6",
                                    target_arch = "arm",
                                    target_arch = "hexagon",
                                    target_arch = "m68k",
@@ -132,6 +138,7 @@ pub struct pthread_rwlock_t {
 
             #[cfg_attr(all(target_pointer_width = "32",
                            any(target_arch = "mips",
+                               target_arch = "mips32r6",
                                target_arch = "arm",
                                target_arch = "hexagon",
                                target_arch = "m68k",
@@ -142,6 +149,7 @@ pub struct pthread_rwlock_t {
                        repr(align(4)))]
             #[cfg_attr(any(target_pointer_width = "64",
                            not(any(target_arch = "mips",
+                                   target_arch = "mips32r6",
                                    target_arch = "arm",
                                    target_arch = "hexagon",
                                    target_arch = "m68k",
diff --git a/src/unix/linux_like/linux/arch/mips/mod.rs b/src/unix/linux_like/linux/arch/mips/mod.rs
index 34c00a293..975e334de 100644
--- a/src/unix/linux_like/linux/arch/mips/mod.rs
+++ b/src/unix/linux_like/linux/arch/mips/mod.rs
@@ -272,7 +272,7 @@ pub struct termios2 {
 }
 
 cfg_if! {
-    if #[cfg(target_arch = "mips64",
+    if #[cfg(any(target_arch = "mips64", target_arch = "mips64r6"),
          any(target_env = "gnu",
              target_env = "uclibc"))] {
         pub const RLIM_INFINITY: ::rlim_t = !0;
@@ -280,7 +280,7 @@ pub struct termios2 {
 }
 
 cfg_if! {
-    if #[cfg(target_arch = "mips",
+    if #[cfg(any(target_arch = "mips", target_arch = "mips32r6"),
          any(target_env = "gnu",
              target_env = "uclibc"))] {
         pub const RLIM_INFINITY: ::rlim_t = 0x7fffffff;
diff --git a/src/unix/linux_like/linux/arch/mod.rs b/src/unix/linux_like/linux/arch/mod.rs
index c1528f593..7f6ddc5a7 100644
--- a/src/unix/linux_like/linux/arch/mod.rs
+++ b/src/unix/linux_like/linux/arch/mod.rs
@@ -1,5 +1,8 @@
 cfg_if! {
-    if #[cfg(any(target_arch = "mips", target_arch = "mips64"))] {
+    if #[cfg(any(target_arch = "mips",
+                 target_arch = "mips32r6",
+                 target_arch = "mips64",
+                 target_arch = "mips64r6"))] {
         mod mips;
         pub use self::mips::*;
     } else if #[cfg(any(target_arch = "powerpc", target_arch = "powerpc64"))] {
diff --git a/src/unix/linux_like/linux/gnu/b32/mod.rs b/src/unix/linux_like/linux/gnu/b32/mod.rs
index 66d1d016f..2df7a47b9 100644
--- a/src/unix/linux_like/linux/gnu/b32/mod.rs
+++ b/src/unix/linux_like/linux/gnu/b32/mod.rs
@@ -43,34 +43,34 @@
 
 s! {
     pub struct stat {
-        #[cfg(not(target_arch = "mips"))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6")))]
         pub st_dev: ::dev_t,
-        #[cfg(target_arch = "mips")]
+        #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))]
         pub st_dev: ::c_ulong,
 
-        #[cfg(not(target_arch = "mips"))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6")))]
         __pad1: ::c_short,
-        #[cfg(target_arch = "mips")]
+        #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))]
         st_pad1: [::c_long; 3],
         pub st_ino: ::ino_t,
         pub st_mode: ::mode_t,
         pub st_nlink: ::nlink_t,
         pub st_uid: ::uid_t,
         pub st_gid: ::gid_t,
-        #[cfg(not(target_arch = "mips"))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6")))]
         pub st_rdev: ::dev_t,
-        #[cfg(target_arch = "mips")]
+        #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))]
         pub st_rdev: ::c_ulong,
-        #[cfg(not(target_arch = "mips"))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6")))]
         __pad2: ::c_short,
-        #[cfg(target_arch = "mips")]
+        #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))]
         st_pad2: [::c_long; 2],
         pub st_size: ::off_t,
-        #[cfg(target_arch = "mips")]
+        #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))]
         st_pad3: ::c_long,
-        #[cfg(not(target_arch = "mips"))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6")))]
         pub st_blksize: ::blksize_t,
-        #[cfg(not(target_arch = "mips"))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6")))]
         pub st_blocks: ::blkcnt_t,
         pub st_atime: ::time_t,
         pub st_atime_nsec: ::c_long,
@@ -78,15 +78,15 @@ pub struct stat {
         pub st_mtime_nsec: ::c_long,
         pub st_ctime: ::time_t,
         pub st_ctime_nsec: ::c_long,
-        #[cfg(not(target_arch = "mips"))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6")))]
         __unused4: ::c_long,
-        #[cfg(not(target_arch = "mips"))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6")))]
         __unused5: ::c_long,
-        #[cfg(target_arch = "mips")]
+        #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))]
         pub st_blksize: ::blksize_t,
-        #[cfg(target_arch = "mips")]
+        #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))]
         pub st_blocks: ::blkcnt_t,
-        #[cfg(target_arch = "mips")]
+        #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))]
         st_pad5: [::c_long; 14],
     }
 
@@ -140,12 +140,12 @@ pub struct semid_ds {
         #[cfg(target_arch = "powerpc")]
         __reserved: ::__syscall_ulong_t,
         pub sem_otime: ::time_t,
-        #[cfg(not(any(target_arch = "mips", target_arch = "powerpc")))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6", target_arch = "powerpc")))]
         __reserved: ::__syscall_ulong_t,
         #[cfg(target_arch = "powerpc")]
         __reserved2: ::__syscall_ulong_t,
         pub sem_ctime: ::time_t,
-        #[cfg(not(any(target_arch = "mips", target_arch = "powerpc")))]
+        #[cfg(not(any(target_arch = "mips", target_arch = "mips32r6", target_arch = "powerpc")))]
         __reserved2: ::__syscall_ulong_t,
         pub sem_nsems: ::__syscall_ulong_t,
         __glibc_reserved3: ::__syscall_ulong_t,
@@ -337,7 +337,7 @@ pub fn sysctl(
     } else if #[cfg(target_arch = "arm")] {
         mod arm;
         pub use self::arm::*;
-    } else if #[cfg(target_arch = "mips")] {
+    } else if #[cfg(any(target_arch = "mips", target_arch = "mips32r6"))] {
         mod mips;
         pub use self::mips::*;
     } else if #[cfg(target_arch = "m68k")] {
diff --git a/src/unix/linux_like/linux/gnu/b64/mod.rs b/src/unix/linux_like/linux/gnu/b64/mod.rs
index 443958cff..ff394e33a 100644
--- a/src/unix/linux_like/linux/gnu/b64/mod.rs
+++ b/src/unix/linux_like/linux/gnu/b64/mod.rs
@@ -72,6 +72,7 @@ pub struct semid_ds {
             target_arch = "aarch64",
             target_arch = "loongarch64",
             target_arch = "mips64",
+            target_arch = "mips64r6",
             target_arch = "powerpc64",
             target_arch = "riscv64",
             target_arch = "sparc64")))]
@@ -81,6 +82,7 @@ pub struct semid_ds {
             target_arch = "aarch64",
             target_arch = "loongarch64",
             target_arch = "mips64",
+            target_arch = "mips64r6",
             target_arch = "powerpc64",
             target_arch = "riscv64",
             target_arch = "sparc64")))]
@@ -105,7 +107,7 @@ pub struct semid_ds {
     } else if #[cfg(any(target_arch = "sparc64"))] {
         mod sparc64;
         pub use self::sparc64::*;
-    } else if #[cfg(any(target_arch = "mips64"))] {
+    } else if #[cfg(any(target_arch = "mips64", target_arch = "mips64r6"))] {
         mod mips64;
         pub use self::mips64::*;
     } else if #[cfg(any(target_arch = "s390x"))] {
diff --git a/src/unix/linux_like/linux/gnu/mod.rs b/src/unix/linux_like/linux/gnu/mod.rs
index ba4664bf5..494bad194 100644
--- a/src/unix/linux_like/linux/gnu/mod.rs
+++ b/src/unix/linux_like/linux/gnu/mod.rs
@@ -116,13 +116,17 @@ pub struct termios {
             target_arch = "sparc",
             target_arch = "sparc64",
             target_arch = "mips",
-            target_arch = "mips64")))]
+            target_arch = "mips32r6",
+            target_arch = "mips64",
+            target_arch = "mips64r6")))]
         pub c_ispeed: ::speed_t,
         #[cfg(not(any(
             target_arch = "sparc",
             target_arch = "sparc64",
             target_arch = "mips",
-            target_arch = "mips64")))]
+            target_arch = "mips32r6",
+            target_arch = "mips64",
+            target_arch = "mips64r6")))]
         pub c_ospeed: ::speed_t,
     }
 
@@ -954,7 +958,10 @@ fn hash<H: ::hash::Hasher>(&self, state: &mut H) {
 pub const KEYCTL_SUPPORTS_SIGN: u32 = 0x04;
 pub const KEYCTL_SUPPORTS_VERIFY: u32 = 0x08;
 cfg_if! {
-    if #[cfg(not(any(target_arch="mips", target_arch="mips64")))] {
+    if #[cfg(not(any(target_arch="mips",
+                     target_arch="mips32r6",
+                     target_arch="mips64",
+                     target_arch = "mips64r6")))] {
         pub const KEYCTL_MOVE: u32 = 30;
         pub const KEYCTL_CAPABILITIES: u32 = 31;
 
@@ -1379,6 +1386,7 @@ pub fn getmntent_r(
                  target_arch = "arm",
                  target_arch = "m68k",
                  target_arch = "mips",
+                 target_arch = "mips32r6",
                  target_arch = "powerpc",
                  target_arch = "sparc",
                  target_arch = "riscv32"))] {
@@ -1388,6 +1396,7 @@ pub fn getmntent_r(
                         target_arch = "aarch64",
                         target_arch = "powerpc64",
                         target_arch = "mips64",
+                        target_arch = "mips64r6",
                         target_arch = "s390x",
                         target_arch = "sparc64",
                         target_arch = "riscv64",
diff --git a/src/unix/linux_like/linux/no_align.rs b/src/unix/linux_like/linux/no_align.rs
index 6f5f2f7c0..3f5d7d6cd 100644
--- a/src/unix/linux_like/linux/no_align.rs
+++ b/src/unix/linux_like/linux/no_align.rs
@@ -5,6 +5,7 @@ pub struct pthread_mutexattr_t {
                 #[cfg(any(target_arch = "x86_64",
                           target_arch = "powerpc64",
                           target_arch = "mips64",
+                          target_arch = "mips64r6",
                           target_arch = "s390x",
                           target_arch = "sparc64",
                           target_arch = "riscv64",
@@ -16,6 +17,7 @@ pub struct pthread_mutexattr_t {
                 #[cfg(not(any(target_arch = "x86_64",
                               target_arch = "powerpc64",
                               target_arch = "mips64",
+                              target_arch = "mips64r6",
                               target_arch = "s390x",
                               target_arch = "sparc64",
                               target_arch = "riscv64",
@@ -68,6 +70,7 @@ pub struct pthread_cond_t {
 
             pub struct pthread_mutex_t {
                 #[cfg(any(target_arch = "mips",
+                          target_arch = "mips32r6",
                           target_arch = "arm",
                           target_arch = "m68k",
                           target_arch = "powerpc",
@@ -76,6 +79,7 @@ pub struct pthread_mutex_t {
                               target_pointer_width = "32")))]
                 __align: [::c_long; 0],
                 #[cfg(not(any(target_arch = "mips",
+                              target_arch = "mips32r6",
                               target_arch = "arm",
                               target_arch = "m68k",
                               target_arch = "powerpc",
@@ -88,6 +92,7 @@ pub struct pthread_mutex_t {
 
             pub struct pthread_rwlock_t {
                 #[cfg(any(target_arch = "mips",
+                          target_arch = "mips32r6",
                           target_arch = "arm",
                           target_arch = "m68k",
                           target_arch = "powerpc",
@@ -96,6 +101,7 @@ pub struct pthread_rwlock_t {
                               target_pointer_width = "32")))]
                 __align: [::c_long; 0],
                 #[cfg(not(any(target_arch = "mips",
+                              target_arch = "mips32r6",
                               target_arch = "arm",
                               target_arch = "m68k",
                               target_arch = "powerpc",
@@ -108,6 +114,7 @@ pub struct pthread_rwlock_t {
 
             pub struct pthread_barrier_t {
                 #[cfg(any(target_arch = "mips",
+                          target_arch = "mips32r6",
                           target_arch = "arm",
                           target_arch = "m68k",
                           target_arch = "powerpc",
@@ -116,6 +123,7 @@ pub struct pthread_barrier_t {
                               target_pointer_width = "32")))]
                 __align: [::c_long; 0],
                 #[cfg(not(any(target_arch = "mips",
+                              target_arch = "mips32r6",
                               target_arch = "arm",
                               target_arch = "m68k",
                               target_arch = "powerpc",
